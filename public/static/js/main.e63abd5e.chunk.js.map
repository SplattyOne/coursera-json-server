{"version":3,"sources":["redux/ActionTypes.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","redux/ActionCreators.js","components/MainComponent.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["ADD_DISHES","DISHES_LOADING","DISHES_FAILED","ADD_COMMENT","ADD_COMMENTS","COMMENTS_FAILED","ADD_PROMOS","PROMOS_LOADING","PROMOS_FAILED","ADD_LEADERS","LEADERS_LOADING","LEADERS_FAILED","Dishes","state","isLoading","errMess","dishes","action","type","ActionTypes","payload","Comments","comments","comment","id","length","date","Date","toISOString","concat","Promotions","promotions","Leaders","leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","message","Loading","className","baseUrl","RenderCard","item","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","width","CardImgOverlay","tag","Menu","jsx_menu","map","Breadcrumb","BreadcrumbItem","active","required","val","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","errors","touched","lendth","split","filter","x","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","color","Component","Header","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","height","Collapse","isOpen","navbar","Nav","NavItem","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","FormGroup","Input","innerRef","input","Footer","RenderDish","CommentForm","handleSubmitComment","postComment","dishID","rating","author","xs","defaultValue","RenderComments","jsx_comments","Intl","DateTimeFormat","year","month","day","format","parse","DishDetail","RenderLeader","Media","left","middle","object","body","heading","About","CardHeader","title","list","dispatch","newComment","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","TransitionGroup","CSSTransition","classNames","timeout","location","path","component","featured","promo","exact","match","parseInt","params","commentsErrMess","key","withRouter","connect","newFeedback","actions","reset","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e63abd5e.chunk.js","sourcesContent":["export const ADD_DISHES = 'ADD_DISHES';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []};\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments:[]\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            comment.id = state.comments.length;\n            comment.date = new Date().toISOString();\n            return { ...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions:[]\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders:[]\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/api/';\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\nimport { FadeTransform } from 'react-animation-components';\n\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    \n  if (isLoading) {\n      return(\n        <Loading />\n      );\n  }\n  else if (errMess) {\n      return(\n        <h4>{errMess}</h4>\n      );\n  }\n  else \n    return(\n      <FadeTransform\n        in\n        transformProps={{\n            exitTransform: 'scale(0.5) translateY(-50%)'\n        }}\n      >\n        <Card>\n          <CardImg src={baseUrl + item.image} alt={item.name} />\n          <CardBody>\n            <CardTitle>{item.name}</CardTitle>\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n            <CardText>{item.description}</CardText>\n          </CardBody>\n        </Card>\n        </FadeTransform>\n    );\n}\n\nfunction Home(props) {\n  return(\n      <div className=\"container\">\n          <div className=\"row align-items-start\">\n              <div className=\"col-12 col-md m-1\">\n                  <RenderCard\n                    item={props.dish}\n                    isLoading={props.dishesLoading}\n                    errMess={props.dishesErrMess}\n                  />\n              </div>\n              <div className=\"col-12 col-md m-1\">\n                  <RenderCard\n                    item={props.promotion}\n                    isLoading={props.promoLoading}\n                    errMess={props.promoErrMess}\n                  />\n              </div>\n              <div className=\"col-12 col-md m-1\">\n                  <RenderCard\n                    item={props.leader}\n                    isLoading={props.leadersLoading}\n                    errMess={props.leadersErrMess}\n                  />\n              </div>\n          </div>\n      </div>\n  );\n}\n\nexport default Home;   ","import React from 'react';\nimport { Card, CardImg, CardTitle, CardImgOverlay, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nconst RenderMenuItem = ({dish}) => {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle tag=\"h5\">{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n    const jsx_menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if (props.dishes.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {jsx_menu}\n                </div>\n            </div>\n        );\n}\n        \n\n\nexport default Menu;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Col, Row, Label } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n    validate(firstname, lastname, telnum, email) {\n        const errors = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: ''\n        };\n\n        if (this.state.touched.firstname && firstname.lendth < 3)\n            errors.firstname = 'First Name should be >= 3 characters';\n        else if (this.state.touched.firstname && firstname.length > 10)\n            errors.firstname = 'First Name should be <= 10 characters';\n\n        if (this.state.touched.lastname && lastname.length < 3)\n            errors.lastname = 'Last Name should be >= 3 characters';\n        else if (this.state.touched.lastname && lastname.length > 10)\n            errors.lastname = 'Last Name should be <= 10 characters';\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.telnum && !reg.test(telnum))\n            errors.telnum = 'Tel. Number should contain only numbers';\n\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\n            errors.email = 'Email should contain a @';\n\n        return errors;\n    }\n\n    render() {\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#top\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    {// eslint-disable-next-line\n                                    }<Control.text\n                                        model=\".firstname\"\n                                        id=\"firstname\"\n                                        name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        className=\"text-danger\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters ',\n                                            maxLength: 'Must be 15 characters or less '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    {// eslint-disable-next-line\n                                    }<Control.text\n                                        model=\".lastname\"\n                                        id=\"lastname\"\n                                        name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters ',\n                                            maxLength: 'Must be 15 characters or less '\n                                        }}\n                                     />\n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    {// eslint-disable-next-line\n                                    }<Control.text\n                                        model=\".telnum\"\n                                        id=\"telnum\"\n                                        name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 numbers ',\n                                            maxLength: 'Must be 15 numbers or less ',\n                                            isNumber: 'Must be a number '\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    {// eslint-disable-next-line\n                                    }<Control.text\n                                        model=\".email\"\n                                        id=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            validEmail: 'Invalid Email Address '\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            {// eslint-disable-next-line\n                                            }<Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    {// eslint-disable-next-line\n                                    }<Control.select\n                                        model=\".contactType\"\n                                        name=\"contactType\"\n                                        className=\"form-control\"\n                                    >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    {// eslint-disable-next-line\n                                    }<Control.textarea\n                                        model=\".message\"\n                                        id=\"message\"\n                                        name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, NavItem, Nav, NavbarToggler, Collapse, Jumbotron,\n        Button, Modal, ModalHeader, ModalBody, FormGroup, Form, Input, Label  } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember me:\" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/home'>\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus'>\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/menu'>\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'>\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron className=\"jumbotron-fluid\">\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\n                                    Remember Me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Card, CardImg, CardTitle, CardBody, CardText, Breadcrumb, BreadcrumbItem,\n        Modal, ModalBody, ModalHeader, Row, Col, Label, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nconst RenderDish = ({dish}) => {\n    \n    return (\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}\n        >\n            <Card>\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle tag=\"h5\">{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n    );\n}\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmitComment = this.handleSubmitComment.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmitComment(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishID, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmitComment(values)}>\n                            <Row>\n                                <Label htmlFor=\"rating\" xs={12}>Rating</Label>\n                            </Row>\n                            <Row>\n                                <Col xs={12}>\n                                    {// eslint-disable-next-line\n                                    }<Control.select\n                                        model=\".rating\"\n                                        name=\"rating\"\n                                        className=\"form-control\"\n                                        defaultValue=\"5\"\n                                    >\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Label htmlFor=\"author\" xs={12}>Your Name</Label>\n                            </Row>\n                            <Row>\n                                <Col xs={12}>\n                                    {// eslint-disable-next-line\n                                    }<Control.text\n                                        model=\".author\"\n                                        id=\"author\"\n                                        name=\"author\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        className=\"text-danger\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters ',\n                                            maxLength: 'Must be 15 characters or less '\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Label htmlFor=\"comment\" xs={12}>Comment</Label>\n                            </Row>\n                            <Row>\n                                <Col xs={12}>\n                                    {// eslint-disable-next-line\n                                    }<Control.textarea\n                                        model=\".comment\"\n                                        id=\"comment\"\n                                        name=\"comment\"\n                                        rows=\"6\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"mt-3\">\n                                <Col xs={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nconst RenderComments = ({comments, postComment, dishID}) => {\n\n    if (comments != null) {\n        const jsx_comments = comments.map((comment) => {\n            return (\n                <Fade in key={comment.id}>\n                    <li className=\"list-unstyled\">\n                        <p>{comment.comment}</p>\n                        <p>-- {comment.author} , {new Intl.DateTimeFormat('ru-RU', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\n                    </li>\n                </Fade>\n            );\n        });\n\n        return (\n            <div>\n                <h4>Comments</h4>\n                <ul className=\"px-0\">\n                    <Stagger in>\n                        {jsx_comments}\n                    </Stagger>\n                </ul>\n                <CommentForm dishID={dishID} postComment={postComment} />\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <h4>Comments</h4>\n                <CommentForm dishID={dishID} postComment={postComment} />\n            </div>\n        );\n    }\n}\n\nconst DishDetail = (props) => {\n\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        )\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDish dish={props.dish} />\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderComments\n                            comments={props.comments}\n                            postComment={props.postComment}\n                            dishID={props.dish.id}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default DishDetail;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Fade, Stagger } from 'react-animation-components';\n\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst RenderLeader = ({leader}) => {\n    return (\n        <Media tag=\"li\">\n            <Media left middle>\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\n            </Media>\n            <Media body className=\"ml-5\">\n                <Media heading>{leader.name}</Media>\n                {leader.designation ? <p>{leader.designation}</p> : null}\n                <p>{leader.description}</p>\n            </Media>\n        </Media>\n    );\n}\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <Fade in key={leader.id}>\n                <div className=\"col-12 mt-5\">\n                    <RenderLeader leader={leader} />\n                </div>\n            </Fade>\n        );\n    });\n\n\n    if (props.leaders.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.leaders.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.leaders.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">40</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                        I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                        P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <Media list>\n                            <Stagger in>\n                                {leaders}\n                            </Stagger>\n                        </Media>\n                    </div>\n                </div>\n            </div>\n        );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishID, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishID: dishID,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        throw error;\n    })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  {\n        console.log('Your comment could not be posted\\nError:', error.message);\n    });\n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(dishes => dispatch(addComments(dishes)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    \n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + 'leaders')\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message,\n    };\n    newFeedback.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        throw error;\n    })\n    .then(response => response.json())\n    .then(response => dispatch(alert('Thank you for your feedback!\\n' + JSON.stringify(response))))\n    .catch(error =>  {\n        console.log('Your feedback could not be posted\\nError:', error.message);\n    });\n}","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport DishDetail from './DishdetailComponent';\nimport About from './AboutComponent';\n\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    postComment: (dishID, rating, author, comment) => dispatch(postComment(dishID, rating, author, comment)),\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) =>\n        dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\n    fetchDishes: () => {dispatch(fetchDishes())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    fetchComments: () => {dispatch(fetchComments())},\n    fetchPromos: () => {dispatch(fetchPromos())},\n    fetchLeaders: () => {dispatch(fetchLeaders())},\n})\n\nclass Main extends Component {\n\n    // Mount:\n    // constructor()\n    // getDerivedStateFromProps()\n    // render()\n    // componentDidMount()\n\n    // Update:\n    // getDerivedStateFromProps()\n    // shouldComponentUpdate()\n    // render()\n    // getSnapshotBeforeUpdate()\n    // componentDidUpdate()\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    onDishSelect(dishID) {\n        this.setState({ selectedDish: dishID });\n    }\n\n    render() {\n\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishesErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leadersLoading={this.props.leaders.isLoading}\n                    leadersErrMess={this.props.leaders.errMess}\n                />\n            );\n        }\n\n        const DishWithID = ({match}) => { // { match, component, history }\n            return (\n                <DishDetail\n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishID, 10))[0]}\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.dishID === parseInt(match.params.dishID,10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        }\n\n        return (\n            <div>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch location={this.props.location}>\n                            <Route path='/home' component={HomePage} />\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route path='/menu/:dishID' component={DishWithID} />\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { ConfigureStore } from './redux/configureStore';\nimport Main from './components/MainComponent';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\n\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}